"""fixed db

Revision ID: 193293fe06f9
Revises: 
Create Date: 2024-12-11 14:29:42.310857

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '193293fe06f9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
users_status = sa.Enum('BUYER', 'SHOP', 'MANAGER', name='userstatus')
order_status = sa.Enum('CONFIRMED', 'ASSEMBLED', 'SENT', 'DELIVERED', 'CANCELED', 'INPROGRES', 'SHOPPINGCART', name='orderstatus')

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category')),
    sa.UniqueConstraint('title', name=op.f('uq_category_title'))
    )
    op.create_table('parametr',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_parametr')),
    sa.UniqueConstraint('name', name=op.f('uq_parametr_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=72), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('status', users_status, nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('shop',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_shop_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shop')),
    sa.UniqueConstraint('user_id', name=op.f('uq_shop_user_id'))
    )
    op.create_table('useraddress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_useraddress_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_useraddress'))
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', order_status, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['useraddress.id'], name=op.f('fk_orders_address_id_useraddress'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_orders_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orders'))
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.Column('remainder', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('remainder > 0', name=op.f('ck_product_`remainder_gt_0`')),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], name=op.f('fk_product_shop_id_shop'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product'))
    )
    op.create_table('category_product',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_category_product_category_id_category'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_category_product_product_id_product'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('category_id', 'product_id', name=op.f('pk_category_product'))
    )
    op.create_table('orderlist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_orderlist_order_id_orders'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_orderlist_product_id_product'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orderlist'))
    )
    op.create_table('parametrproduct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('parametr_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['parametr_id'], ['parametr.id'], name=op.f('fk_parametrproduct_parametr_id_parametr'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_parametrproduct_product_id_product'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_parametrproduct'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parametrproduct')
    op.drop_table('orderlist')
    op.drop_table('category_product')
    op.drop_table('product')
    op.drop_table('orders')
    op.drop_table('useraddress')
    op.drop_table('shop')
    op.drop_table('users')
    op.drop_table('parametr')
    op.drop_table('category')
    users_status.drop(op.get_bind())
    order_status.drop(op.get_bind())
    # ### end Alembic commands ###
